#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-image: &superset-image ${SUPERSET_IMAGE}:${SUPERSET_VERSION:-master}
x-superset-depends-on: &superset-depends-on
  - superset_postgresql
  - superset_redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  #- ./docker:/app/docker
  - ${PWD}/deployments/volumes/superset_home:/app/superset_home

version: "3.7"
services:
  superset_redis:
    image: redis:5
    container_name: superset-redis
    restart: unless-stopped
    volumes:
      - ${PWD}/deployments/volumes/superset_redis:/data
    networks:
      - supersetnet

  superset_postgresql:
    env_file: docker/.env-non-dev
    image: postgres:14
    container_name: superset-postgresql
    restart: unless-stopped
    volumes:
      - ${PWD}/deployments/volumes/superset_postgresql:/var/lib/postgresql/data
    networks:
      - supersetnet

  superset_app:
    env_file: docker/.env-non-dev
    image: *superset-image
    container_name: superset-app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    networks:
      - supersetnet

  superset_init:
    image: *superset-image
    container_name: superset-init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true
    networks:
      - supersetnet

  superset_worker:
    image: *superset-image
    container_name: superset-worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      test: ["CMD-SHELL", "celery inspect ping -A superset.tasks.celery_app:app -d celery@$$HOSTNAME"]
    networks:
      - supersetnet

  superset_worker_beat:
    image: *superset-image
    container_name: superset-worker-beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true
    networks:
      - supersetnet

#volumes:
#  superset_home:
#    external: false
#  superset_postgresql:
#    external: false
#  superset_redis:
#    external: false

networks:
  supersetnet:
    driver: bridge
